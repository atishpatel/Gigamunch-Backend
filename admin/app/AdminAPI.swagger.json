{
  "swagger": "2.0",
"securityDefinitions": {"auth-token": {"type": "apiKey","in": "header","name": "auth-token"}},"security": [{"auth-token": []}],
  "info": {
    "title": "AdminAPI.proto",
    "version": "version not set"
  },
  "schemes": [
    
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin/api/v1/GetAllExecutionStats": {
      "post": {
        "summary": "ExecutionStats",
        "operationId": "GetAllExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetAllExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetAllExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetDeliveries": {
      "post": {
        "summary": "Deliveries",
        "operationId": "GetDeliveries",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetDeliveriesResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetDeliveriesReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecution": {
      "post": {
        "summary": "GetExecution returns a single culture execution.",
        "operationId": "GetExecution",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecutionStats": {
      "post": {
        "operationId": "GetExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecutions": {
      "post": {
        "summary": "GetExecutions returns a list of culture executions.",
        "operationId": "GetExecutions",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetHasSubscribed": {
      "post": {
        "summary": "GetHasSubscribed gets all the people who are or have subscribed at one point.",
        "operationId": "GetHasSubscribed",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetHasSubscribedResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetHasSubscribedReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLog": {
      "post": {
        "summary": "GetLog returns a log.",
        "operationId": "GetLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLogs": {
      "post": {
        "summary": "GetLogs returns a list of logs.",
        "operationId": "GetLogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLogsByEmail": {
      "post": {
        "summary": "GetLogsByEmail returns a list of logs by email.",
        "operationId": "GetLogsByEmail",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsByEmailResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsByEmailReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetSubscriberSublogs": {
      "post": {
        "operationId": "GetSubscriberSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetUnpaidSublogs": {
      "post": {
        "operationId": "GetUnpaidSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetUnpaidSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetUnpaidSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/ProcessSublogs": {
      "post": {
        "operationId": "ProcessSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIProcessSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIProcessSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/RefundAndSkipSublog": {
      "post": {
        "summary": "RefundAndSkipSublog refunds and skips a customer",
        "operationId": "RefundAndSkipSublog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIRefundAndSkipSublogReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SendCustomerSMS": {
      "post": {
        "summary": "SendCustomerSMS sends an sms to the customers. Use {{first_name}} for first name and {{name}} for full name.",
        "operationId": "SendCustomerSMS",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISendCustomerSMSReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SetAdmin": {
      "post": {
        "summary": "SetAdmin makes a use an admin.",
        "operationId": "SetAdmin",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISetAdminReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SkipActivity": {
      "post": {
        "summary": "SkipActivity skips a sub for a date.",
        "operationId": "SkipActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPISkipActivityResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISkipActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UnskipActivity": {
      "post": {
        "summary": "UnskipActivity unskips a sub for a date.",
        "operationId": "UnskipActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUnskipActivityResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUnskipActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateDeliveries": {
      "post": {
        "operationId": "UpdateDeliveries",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateDeliveriesResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateDeliveriesReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateExecution": {
      "post": {
        "summary": "UpdateExecution updates or creates an execution.",
        "operationId": "UpdateExecution",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateExecutionStats": {
      "post": {
        "operationId": "UpdateExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    }
  },
  "definitions": {
    "AddressAddress": {
      "type": "object",
      "properties": {
        "apt": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "full_address": {
          "type": "string"
        }
      },
      "title": "The error object that gets returned with every"
    },
    "AdminAPIContent": {
      "type": "object",
      "properties": {
        "hero_image_url": {
          "type": "string"
        },
        "cook_image_url": {
          "type": "string"
        },
        "hands_plate_image_url": {
          "type": "string"
        },
        "dinner_image_url": {
          "type": "string"
        },
        "spotify_url": {
          "type": "string"
        },
        "youtube_url": {
          "type": "string"
        }
      },
      "description": "Content is a collection of urls pointing to content realted to the execution."
    },
    "AdminAPICulture": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "greeting": {
          "type": "string"
        },
        "flag_emoji": {
          "type": "string"
        }
      },
      "description": "Culture is the country in a culture execution."
    },
    "AdminAPICultureCook": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "story": {
          "type": "string"
        }
      },
      "description": "CultureCook is the culture cook for a culture execution."
    },
    "AdminAPIDelivery": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "driver_name": {
          "type": "string"
        },
        "driver_email": {
          "type": "string"
        },
        "sub_email": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "success": {
          "type": "boolean",
          "format": "boolean"
        },
        "fail": {
          "type": "boolean",
          "format": "boolean"
        },
        "sub_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AddressAddress"
        },
        "delivery_notes": {
          "type": "string"
        },
        "servings": {
          "type": "integer",
          "format": "int32"
        },
        "vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "first": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Deliveries"
    },
    "AdminAPIDish": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "color": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ingredients": {
          "type": "string"
        },
        "is_for_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_for_non_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "Dish is a dish in a culture execution."
    },
    "AdminAPIErrorOnlyResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        }
      },
      "title": "Common"
    },
    "AdminAPIExecution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "publish": {
          "type": "boolean",
          "format": "boolean"
        },
        "created_datetime": {
          "type": "string"
        },
        "culture": {
          "$ref": "#/definitions/AdminAPICulture",
          "title": "Info"
        },
        "content": {
          "$ref": "#/definitions/AdminAPIContent"
        },
        "culture_cook": {
          "$ref": "#/definitions/AdminAPICultureCook"
        },
        "dishes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIDish"
          }
        },
        "has_pork": {
          "type": "boolean",
          "format": "boolean",
          "title": "Diet"
        },
        "has_beef": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_chicken": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_weird_meat": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_fish": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_other_seafood": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Execution"
    },
    "AdminAPIExecutionStats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "created_datetime": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "nationality": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "revenue": {
          "type": "number",
          "format": "float"
        },
        "payroll": {
          "$ref": "#/definitions/AdminAPIPayroll"
        },
        "payroll_costs": {
          "type": "number",
          "format": "float"
        },
        "food_costs": {
          "type": "number",
          "format": "float"
        },
        "delivery_costs": {
          "type": "number",
          "format": "float"
        },
        "onboarding_costs": {
          "type": "number",
          "format": "float"
        },
        "processing_costs": {
          "type": "number",
          "format": "float"
        },
        "tax_costs": {
          "type": "number",
          "format": "float"
        },
        "packaging_costs": {
          "type": "number",
          "format": "float"
        },
        "other_costs": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "ExecutionStats"
    },
    "AdminAPIGetAllExecutionStatsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetAllExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "execution_stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIExecutionStats"
          }
        }
      }
    },
    "AdminAPIGetDeliveriesReq": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "driver_email": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetDeliveriesResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "deliveries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIDelivery"
          }
        }
      }
    },
    "AdminAPIGetExecutionReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AdminAPIGetExecutionResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "execution": {
          "$ref": "#/definitions/AdminAPIExecution"
        }
      }
    },
    "AdminAPIGetExecutionStatsReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AdminAPIGetExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecutionStats"
        }
      }
    },
    "AdminAPIGetExecutionsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetExecutionsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "executions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIExecution"
          }
        }
      }
    },
    "AdminAPIGetHasSubscribedReq": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetHasSubscribedResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPISubscriber"
          }
        }
      }
    },
    "AdminAPIGetLogReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Log"
    },
    "AdminAPIGetLogResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "log": {
          "$ref": "#/definitions/LogLog"
        }
      }
    },
    "AdminAPIGetLogsByEmailReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetLogsByEmailResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogLog"
          }
        }
      }
    },
    "AdminAPIGetLogsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetLogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogLog"
          }
        }
      }
    },
    "AdminAPIGetSubscriberSublogsReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetSubscriberSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "sublogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPISublog"
          }
        }
      }
    },
    "AdminAPIGetUnpaidSublogsReq": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetUnpaidSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "sublogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPISublog"
          }
        }
      }
    },
    "AdminAPIPayroll": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hours": {
          "type": "number",
          "format": "float"
        },
        "wage": {
          "type": "number",
          "format": "float"
        },
        "postion": {
          "type": "string"
        }
      },
      "description": "Payroll is the payroll."
    },
    "AdminAPIProcessSublogsReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPIProcessSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        }
      }
    },
    "AdminAPIRefundAndSkipSublogReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPISendCustomerSMSReq": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AdminAPISetAdminReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Auth"
    },
    "AdminAPISkipActivityReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPISkipActivityResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        }
      }
    },
    "AdminAPISublog": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "sub_email": {
          "type": "string"
        },
        "created_datetime": {
          "type": "string"
        },
        "skip": {
          "type": "boolean",
          "format": "boolean"
        },
        "servings": {
          "type": "integer",
          "format": "int32"
        },
        "veg_servings": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "amount_paid": {
          "type": "number",
          "format": "float"
        },
        "paid": {
          "type": "boolean",
          "format": "boolean"
        },
        "paid_datetime": {
          "type": "string"
        },
        "payment_method_token": {
          "type": "string"
        },
        "transaction_id": {
          "type": "string"
        },
        "free": {
          "type": "boolean",
          "format": "boolean"
        },
        "discount_amount": {
          "type": "number",
          "format": "float"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "string"
        },
        "refunded": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "Sublogs"
    },
    "AdminAPISubscriber": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/AddressAddress"
        },
        "customer_id": {
          "type": "string"
        },
        "subscription_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "first_payment_date": {
          "type": "string"
        },
        "is_subscribed": {
          "type": "boolean",
          "format": "boolean"
        },
        "subscription_date": {
          "type": "string"
        },
        "unsubscribed_date": {
          "type": "string"
        },
        "first_box_date": {
          "type": "string"
        },
        "servings": {
          "type": "integer",
          "format": "int32"
        },
        "vegetarian_servings": {
          "type": "integer",
          "format": "int32"
        },
        "delivery_time": {
          "type": "integer",
          "format": "int32"
        },
        "subscription_day": {
          "type": "string"
        },
        "weekly_amount": {
          "type": "number",
          "format": "float"
        },
        "payment_method_token": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "delivery_tips": {
          "type": "string"
        },
        "bag_reminder_sms": {
          "type": "boolean",
          "format": "boolean"
        },
        "num_gift_dinners": {
          "type": "integer",
          "format": "int32",
          "title": "gift"
        },
        "reference_email": {
          "type": "string"
        },
        "gift_reveal_date": {
          "type": "string"
        },
        "referral_page_opens": {
          "type": "integer",
          "format": "int32",
          "title": "stats"
        },
        "referred_page_opens": {
          "type": "integer",
          "format": "int32"
        },
        "gift_page_opens": {
          "type": "integer",
          "format": "int32"
        },
        "gifted_page_opens": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Subscriber"
    },
    "AdminAPIUnskipActivityReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPIUnskipActivityResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        }
      }
    },
    "AdminAPIUpdateDeliveriesReq": {
      "type": "object",
      "properties": {
        "deliveries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIDelivery"
          }
        }
      }
    },
    "AdminAPIUpdateDeliveriesResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        }
      }
    },
    "AdminAPIUpdateExecutionReq": {
      "type": "object",
      "properties": {
        "execution": {
          "$ref": "#/definitions/AdminAPIExecution"
        }
      }
    },
    "AdminAPIUpdateExecutionResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "execution": {
          "$ref": "#/definitions/AdminAPIExecution"
        }
      }
    },
    "AdminAPIUpdateExecutionStatsReq": {
      "type": "object",
      "properties": {
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecution"
        }
      }
    },
    "AdminAPIUpdateExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorError"
        },
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecution"
        }
      }
    },
    "ErrorCode": {
      "type": "string",
      "enum": [
        "Unknown",
        "Success",
        "InvalidArgument",
        "NotFound",
        "PermissionDenied",
        "Unauthenticated",
        "SignOut",
        "Internal"
      ],
      "default": "Unknown",
      "title": "- Unknown: TODO:  figure out codes"
    },
    "ErrorError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/ErrorCode"
        },
        "message": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      },
      "title": "The error object that gets returned with every"
    },
    "LogBasicPayload": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "LogLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "log_name": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "action_user_id": {
          "type": "string",
          "format": "int64"
        },
        "action_user_email": {
          "type": "string"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "user_email": {
          "type": "string"
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "basic_payload": {
          "$ref": "#/definitions/LogBasicPayload"
        }
      }
    }
  }
}
