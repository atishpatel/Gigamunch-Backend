{
  "swagger": "2.0",
"securityDefinitions": {"auth-token": {"type": "apiKey","in": "header","name": "auth-token"}},"security": [{"auth-token": []}],
  "info": {
    "title": "AdminAPI.proto",
    "version": "version not set"
  },
  "schemes": [
    
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/admin/api/v1/ActivateSubscriber": {
      "post": {
        "summary": "ActivateSubscriber activates a subscriber.",
        "operationId": "ActivateSubscriber",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIActivateSubscriberReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/DeactivateSubscriber": {
      "post": {
        "summary": "DeactivateSubscriber deactivates a subscriber.",
        "operationId": "DeactivateSubscriber",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIDeactivateSubscriberReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/DiscountSubscriber": {
      "post": {
        "operationId": "DiscountSubscriber",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIDiscountSubscriberReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetAllExecutionStats": {
      "post": {
        "operationId": "GetAllExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetAllExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetAllExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetDeliveries": {
      "post": {
        "operationId": "GetDeliveries",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetDeliveriesResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetDeliveriesReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecution": {
      "post": {
        "summary": "GetExecution returns a single culture execution.",
        "operationId": "GetExecution",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecutionStats": {
      "post": {
        "operationId": "GetExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetExecutions": {
      "post": {
        "summary": "GetExecutions returns a list of culture executions.",
        "operationId": "GetExecutions",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetExecutionsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLog": {
      "post": {
        "summary": "GetLog returns a log.",
        "operationId": "GetLog",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLogs": {
      "post": {
        "summary": "GetLogs returns a list of logs.",
        "operationId": "GetLogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLogsByExecution": {
      "post": {
        "summary": "GetLogsByExecution returns a list of logs by ExecutionID.",
        "operationId": "GetLogsByExecution",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsByExecutionReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetLogsForUser": {
      "post": {
        "summary": "GetLogsForUser returns a list of logs by email.",
        "operationId": "GetLogsForUser",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetLogsForUserReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetSubscriberActivities": {
      "post": {
        "operationId": "GetSubscriberActivities",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberActivitiesResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUserIDReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetSubscriberDiscounts": {
      "post": {
        "operationId": "GetSubscriberDiscounts",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberDiscountsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUserIDReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetSubscriberSublogs": {
      "post": {
        "operationId": "GetSubscriberSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/GetUnpaidSublogs": {
      "post": {
        "operationId": "GetUnpaidSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetUnpaidSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetUnpaidSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/ProcessSublogs": {
      "post": {
        "operationId": "ProcessSublogs",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIProcessSublogsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIProcessSublogsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/RefundActivity": {
      "post": {
        "summary": "RefundActivity unskips a sub for a date.",
        "operationId": "RefundActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIRefundActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/RefundAndSkipActivity": {
      "post": {
        "summary": "RefundAndSkipActivity unskips a sub for a date.",
        "operationId": "RefundAndSkipActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIRefundAndSkipActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/ReplaceSubscriberEmail": {
      "post": {
        "summary": "ReplaceSubscriberEmail replaces a subscriber email with a new email.",
        "operationId": "ReplaceSubscriberEmail",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIReplaceSubscriberEmailReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SendCustomerSMS": {
      "post": {
        "summary": "SendCustomerSMS sends an sms to the customers. Use {{first_name}} for first name and {{name}} for full name.",
        "operationId": "SendCustomerSMS",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISendCustomerSMSReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SetAdmin": {
      "post": {
        "summary": "SetAdmin makes a use an admin.",
        "operationId": "SetAdmin",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISetAdminReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SetupActivities": {
      "post": {
        "summary": "SetupActivities unskips a sub for a date.",
        "operationId": "SetupActivities",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISetupActivitiesReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/SkipActivity": {
      "post": {
        "summary": "SkipActivity skips a sub for a date.",
        "operationId": "SkipActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPISkipActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UnskipActivity": {
      "post": {
        "summary": "UnskipActivity unskips a sub for a date.",
        "operationId": "UnskipActivity",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUnskipActivityReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateDeliveries": {
      "post": {
        "operationId": "UpdateDeliveries",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateDeliveriesResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateDeliveriesReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateDrip": {
      "post": {
        "operationId": "UpdateDrip",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIErrorOnlyResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateDripReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateExecution": {
      "post": {
        "summary": "UpdateExecution updates or creates an execution.",
        "operationId": "UpdateExecution",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v1/UpdateExecutionStats": {
      "post": {
        "operationId": "UpdateExecutionStats",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionStatsResp"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUpdateExecutionStatsReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v2/GetHasSubscribed": {
      "post": {
        "summary": "GetHasSubscribed gets all the people who are or have subscribed at one point.",
        "operationId": "GetHasSubscribed",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetHasSubscribedRespV2"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIGetHasSubscribedReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    },
    "/admin/api/v2/GetSubscriber": {
      "post": {
        "operationId": "GetSubscriberV2",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AdminAPIGetSubscriberRespV2"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdminAPIUserIDReq"
            }
          }
        ],
        "tags": [
          "Admin"
        ]
      }
    }
  },
  "definitions": {
    "AdminAPIActivateSubscriberReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "first_bag_date": {
          "type": "string",
          "title": "optional"
        }
      }
    },
    "AdminAPIDeactivateSubscriberReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "AdminAPIDelivery": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "driver_name": {
          "type": "string"
        },
        "driver_email": {
          "type": "string"
        },
        "sub_email": {
          "type": "string"
        },
        "order": {
          "type": "integer",
          "format": "int32"
        },
        "success": {
          "type": "boolean",
          "format": "boolean"
        },
        "fail": {
          "type": "boolean",
          "format": "boolean"
        },
        "sub_name": {
          "type": "string"
        },
        "phone_number": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/CommonAddress"
        },
        "delivery_notes": {
          "type": "string"
        },
        "servings": {
          "type": "integer",
          "format": "int32"
        },
        "vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "first": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "**********************\nDeliveries\n**********************"
    },
    "AdminAPIDiscountSubscriberReq": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "discount_amount": {
          "type": "number",
          "format": "float"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIErrorOnlyResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        }
      },
      "title": "**********************\nCommon\n**********************"
    },
    "AdminAPIExecutionStats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "created_datetime": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "nationality": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "revenue": {
          "type": "number",
          "format": "float"
        },
        "payroll": {
          "$ref": "#/definitions/AdminAPIPayroll"
        },
        "payroll_costs": {
          "type": "number",
          "format": "float"
        },
        "food_costs": {
          "type": "number",
          "format": "float"
        },
        "delivery_costs": {
          "type": "number",
          "format": "float"
        },
        "onboarding_costs": {
          "type": "number",
          "format": "float"
        },
        "processing_costs": {
          "type": "number",
          "format": "float"
        },
        "tax_costs": {
          "type": "number",
          "format": "float"
        },
        "packaging_costs": {
          "type": "number",
          "format": "float"
        },
        "other_costs": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "**********************\nExecutionStats\n**********************"
    },
    "AdminAPIGetAllExecutionStatsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetAllExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "execution_stats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIExecutionStats"
          }
        }
      }
    },
    "AdminAPIGetDeliveriesReq": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "driver_email": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetDeliveriesResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "deliveries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIDelivery"
          }
        }
      }
    },
    "AdminAPIGetExecutionReq": {
      "type": "object",
      "properties": {
        "idOrDate": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetExecutionResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "execution": {
          "$ref": "#/definitions/CommonExecution"
        }
      }
    },
    "AdminAPIGetExecutionStatsReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AdminAPIGetExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecutionStats"
        }
      }
    },
    "AdminAPIGetExecutionsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "**********************\nExecution\n**********************"
    },
    "AdminAPIGetExecutionsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "executions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonExecution"
          }
        },
        "progress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonExecutionProgress"
          }
        }
      }
    },
    "AdminAPIGetHasSubscribedReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetHasSubscribedRespV2": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "subscribers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSubscriber"
          }
        }
      }
    },
    "AdminAPIGetLogReq": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "**********************\nLog\n**********************"
    },
    "AdminAPIGetLogResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "log": {
          "$ref": "#/definitions/CommonLog"
        }
      }
    },
    "AdminAPIGetLogsByExecutionReq": {
      "type": "object",
      "properties": {
        "execution_id": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "AdminAPIGetLogsForUserReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetLogsReq": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32"
        },
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetLogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonLog"
          }
        }
      }
    },
    "AdminAPIGetSubscriberActivitiesResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonActivity"
          }
        }
      }
    },
    "AdminAPIGetSubscriberDiscountsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "discounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDiscount"
          }
        }
      }
    },
    "AdminAPIGetSubscriberRespV2": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "subscriber": {
          "$ref": "#/definitions/CommonSubscriber"
        }
      }
    },
    "AdminAPIGetSubscriberSublogsReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "AdminAPIGetSubscriberSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "sublogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPISublog"
          }
        }
      }
    },
    "AdminAPIGetUnpaidSublogsReq": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIGetUnpaidSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "sublogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPISublog"
          }
        }
      }
    },
    "AdminAPIPayroll": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "hours": {
          "type": "number",
          "format": "float"
        },
        "wage": {
          "type": "number",
          "format": "float"
        },
        "postion": {
          "type": "string"
        }
      },
      "description": "Payroll is the payroll."
    },
    "AdminAPIProcessSublogsReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "AdminAPIProcessSublogsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        }
      }
    },
    "AdminAPIRefundActivityReq": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "date": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "percent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIRefundAndSkipActivityReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "percent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIReplaceSubscriberEmailReq": {
      "type": "object",
      "properties": {
        "old_email": {
          "type": "string"
        },
        "new_email": {
          "type": "string"
        }
      }
    },
    "AdminAPISendCustomerSMSReq": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        }
      }
    },
    "AdminAPISetAdminReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "title": "**********************\nAuth\n**********************"
    },
    "AdminAPISetupActivitiesReq": {
      "type": "object",
      "properties": {
        "hours": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPISkipActivityReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "AdminAPISublog": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "sub_email": {
          "type": "string"
        },
        "created_datetime": {
          "type": "string"
        },
        "skip": {
          "type": "boolean",
          "format": "boolean"
        },
        "servings": {
          "type": "integer",
          "format": "int32"
        },
        "veg_servings": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "amount_paid": {
          "type": "number",
          "format": "float"
        },
        "paid": {
          "type": "boolean",
          "format": "boolean"
        },
        "paid_datetime": {
          "type": "string"
        },
        "payment_method_token": {
          "type": "string"
        },
        "transaction_id": {
          "type": "string"
        },
        "free": {
          "type": "boolean",
          "format": "boolean"
        },
        "discount_amount": {
          "type": "number",
          "format": "float"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "customer_id": {
          "type": "string"
        },
        "refunded": {
          "type": "boolean",
          "format": "boolean"
        },
        "refunded_amount": {
          "type": "number",
          "format": "float"
        }
      },
      "title": "**********************\nSublogs\n**********************"
    },
    "AdminAPIUnskipActivityReq": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "AdminAPIUpdateDeliveriesReq": {
      "type": "object",
      "properties": {
        "deliveries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdminAPIDelivery"
          }
        }
      }
    },
    "AdminAPIUpdateDeliveriesResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        }
      }
    },
    "AdminAPIUpdateDripReq": {
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hours": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AdminAPIUpdateExecutionReq": {
      "type": "object",
      "properties": {
        "execution": {
          "$ref": "#/definitions/CommonExecution"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "AdminAPIUpdateExecutionResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "execution": {
          "$ref": "#/definitions/CommonExecution"
        }
      }
    },
    "AdminAPIUpdateExecutionStatsReq": {
      "type": "object",
      "properties": {
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecutionStats"
        }
      }
    },
    "AdminAPIUpdateExecutionStatsResp": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/CommonError"
        },
        "execution_stats": {
          "$ref": "#/definitions/AdminAPIExecutionStats"
        }
      }
    },
    "AdminAPIUserIDReq": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        }
      }
    },
    "CommonActivity": {
      "type": "object",
      "properties": {
        "created_datetime": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "address_changed": {
          "type": "boolean",
          "format": "boolean"
        },
        "address_apt": {
          "type": "string"
        },
        "address_string": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        },
        "skip": {
          "type": "boolean",
          "format": "boolean"
        },
        "forgiven": {
          "type": "boolean",
          "format": "boolean"
        },
        "servings_non_vegetarian": {
          "type": "integer",
          "format": "int32"
        },
        "servings_vegetarian": {
          "type": "integer",
          "format": "int32"
        },
        "servings_changed": {
          "type": "boolean",
          "format": "boolean"
        },
        "first": {
          "type": "boolean",
          "format": "boolean"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "amount_paid": {
          "type": "number",
          "format": "float"
        },
        "discount_amount": {
          "type": "number",
          "format": "float"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        },
        "paid": {
          "type": "boolean",
          "format": "boolean"
        },
        "paid_datetime": {
          "type": "string"
        },
        "payment_provider": {
          "type": "integer",
          "format": "int32"
        },
        "transaction_id": {
          "type": "string"
        },
        "payment_method_token": {
          "type": "string"
        },
        "customer_id": {
          "type": "string"
        },
        "refunded": {
          "type": "boolean",
          "format": "boolean"
        },
        "refunded_amount": {
          "type": "number",
          "format": "float"
        },
        "refunded_datetime": {
          "type": "string"
        },
        "refund_transaction_id": {
          "type": "string"
        },
        "gift": {
          "type": "boolean",
          "format": "boolean"
        },
        "gift_from_user_id": {
          "type": "string",
          "format": "int64"
        },
        "deviant": {
          "type": "boolean",
          "format": "boolean"
        },
        "deviant_reason": {
          "type": "string"
        }
      }
    },
    "CommonAddress": {
      "type": "object",
      "properties": {
        "apt": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "zip": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "latitude": {
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "type": "number",
          "format": "double"
        },
        "full_address": {
          "type": "string"
        }
      }
    },
    "CommonBasicPayload": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CommonCampaign": {
      "type": "object",
      "properties": {
        "Source": {
          "type": "string"
        },
        "Medium": {
          "type": "string"
        },
        "Campaign": {
          "type": "string"
        },
        "Term": {
          "type": "string"
        },
        "Content": {
          "type": "string"
        },
        "Timestamp": {
          "type": "string"
        }
      }
    },
    "CommonCode": {
      "type": "string",
      "enum": [
        "NoError",
        "Unknown",
        "Success",
        "InvalidArgument",
        "NotFound",
        "PermissionDenied",
        "Unauthenticated",
        "SignOut",
        "Internal"
      ],
      "default": "NoError",
      "title": "- NoError: TODO:  figure out codes"
    },
    "CommonContent": {
      "type": "object",
      "properties": {
        "landscape_image_url": {
          "type": "string"
        },
        "cook_image_url": {
          "type": "string"
        },
        "hands_plate_non_veg_image_url": {
          "type": "string"
        },
        "hands_plate_veg_image_url": {
          "type": "string"
        },
        "dinner_non_veg_image_url": {
          "type": "string"
        },
        "spotify_url": {
          "type": "string"
        },
        "youtube_url": {
          "type": "string"
        },
        "font_url": {
          "type": "string"
        },
        "dinner_veg_image_url": {
          "type": "string"
        },
        "cover_image_url": {
          "type": "string"
        },
        "map_image_url": {
          "type": "string"
        },
        "cook_face_image_url": {
          "type": "string"
        }
      },
      "description": "Content is a collection of urls pointing to content realted to the execution."
    },
    "CommonCulture": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "greeting": {
          "type": "string"
        },
        "flag_emoji": {
          "type": "string"
        },
        "description_preview": {
          "type": "string"
        }
      },
      "description": "Culture is the culture in a culture execution."
    },
    "CommonCultureCook": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "story": {
          "type": "string"
        },
        "story_preview": {
          "type": "string"
        },
        "q_and_a": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonQandA"
          }
        }
      },
      "description": "CultureCook is the culture cook for a culture execution."
    },
    "CommonCultureGuide": {
      "type": "object",
      "properties": {
        "info_boxes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonInfoBox"
          }
        },
        "dinner_instructions": {
          "type": "string"
        },
        "main_color": {
          "type": "string"
        },
        "font_name": {
          "type": "string"
        },
        "font_style": {
          "type": "string"
        },
        "font_caps": {
          "type": "boolean",
          "format": "boolean"
        },
        "vegetarian_dinner_instructions": {
          "type": "string"
        },
        "font_name_post_script": {
          "type": "string"
        }
      },
      "description": "CultureGuide is content related to the culture guide."
    },
    "CommonDiscount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "created_datetime": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "date_used": {
          "type": "string"
        },
        "discount_amount": {
          "type": "number",
          "format": "float"
        },
        "discount_percent": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CommonDish": {
      "type": "object",
      "properties": {
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "color": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ingredients": {
          "type": "string"
        },
        "is_for_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_for_non_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_on_main_plate": {
          "type": "boolean",
          "format": "boolean"
        },
        "image_url": {
          "type": "string"
        },
        "description_preview": {
          "type": "string"
        },
        "container_size": {
          "type": "string"
        }
      },
      "description": "Dish is a dish in a culture execution."
    },
    "CommonEmail": {
      "type": "object",
      "properties": {
        "dinner_non_veg_image_url": {
          "type": "string"
        },
        "dinner_veg_image_url": {
          "type": "string"
        },
        "cook_image_url": {
          "type": "string"
        },
        "landscape_image_url": {
          "type": "string"
        },
        "cook_face_image_url": {
          "type": "string"
        }
      },
      "description": "Email is the email content a subscriber gets."
    },
    "CommonEmailPref": {
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "description": "EmailPref is a pref for an email."
    },
    "CommonError": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/CommonCode"
        },
        "message": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        }
      },
      "title": "The error object that gets returned with every"
    },
    "CommonExecution": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "date": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "publish": {
          "type": "boolean",
          "format": "boolean"
        },
        "created_datetime": {
          "type": "string"
        },
        "culture": {
          "$ref": "#/definitions/CommonCulture"
        },
        "content": {
          "$ref": "#/definitions/CommonContent"
        },
        "culture_cook": {
          "$ref": "#/definitions/CommonCultureCook"
        },
        "culture_guide": {
          "$ref": "#/definitions/CommonCultureGuide"
        },
        "dishes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonDish"
          }
        },
        "stickers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonSticker"
          }
        },
        "notifications": {
          "$ref": "#/definitions/CommonNotifications"
        },
        "has_pork": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_beef": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_chicken": {
          "type": "boolean",
          "format": "boolean"
        },
        "email": {
          "$ref": "#/definitions/CommonEmail"
        }
      },
      "description": "Execution is an execution of a culture."
    },
    "CommonExecutionProgress": {
      "type": "object",
      "properties": {
        "head_chef": {
          "type": "integer",
          "format": "int32"
        },
        "content_writer": {
          "type": "integer",
          "format": "int32"
        },
        "culture_guide": {
          "type": "integer",
          "format": "int32"
        },
        "summary": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonExecutionProgressSummary"
          }
        }
      },
      "description": "ExecutionProgress is the progress on an execution."
    },
    "CommonExecutionProgressSummary": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "is_error": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "ExecutionProgressSummary summarizes execution progress."
    },
    "CommonFoodPref": {
      "type": "object",
      "properties": {
        "no_pork": {
          "type": "boolean",
          "format": "boolean"
        },
        "no_beef": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "FoodPref are pref for food."
    },
    "CommonInfoBox": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "image": {
          "type": "string"
        }
      },
      "description": "InfoBox is the infobox in a culture guide."
    },
    "CommonLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "log_name": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "action_user_id": {
          "type": "string"
        },
        "action_user_email": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "user_email": {
          "type": "string"
        },
        "severity": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "basic_payload": {
          "$ref": "#/definitions/CommonBasicPayload"
        }
      }
    },
    "CommonNotifications": {
      "type": "object",
      "properties": {
        "delivery_sms": {
          "type": "string"
        },
        "rating_sms": {
          "type": "string"
        }
      },
      "description": "Notifications are notifications the subscribers gets."
    },
    "CommonPhonePref": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "raw_number": {
          "type": "string"
        },
        "disable_bag_reminder": {
          "type": "boolean",
          "format": "boolean"
        },
        "disable_delivered": {
          "type": "boolean",
          "format": "boolean"
        },
        "disable_review": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "PhonePref is a pref for a phone."
    },
    "CommonQandA": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        },
        "answer": {
          "type": "string"
        }
      },
      "description": "QandA are questions and answers with the culture cook."
    },
    "CommonSticker": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ingredients": {
          "type": "string"
        },
        "extra_instructions": {
          "type": "string"
        },
        "reheat_option_1": {
          "type": "string"
        },
        "reheat_option_2": {
          "type": "string"
        },
        "reheat_time_1": {
          "type": "string"
        },
        "reheat_time_2": {
          "type": "string"
        },
        "reheat_instructions_1": {
          "type": "string"
        },
        "reheat_instructions_2": {
          "type": "string"
        },
        "eating_temperature": {
          "type": "string"
        },
        "reheat_option_1_preferred": {
          "type": "boolean",
          "format": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "color": {
          "type": "string"
        },
        "is_for_non_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        },
        "is_for_vegetarian": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "Sticker are reheat stickers for dishes."
    },
    "CommonSubscriber": {
      "type": "object",
      "properties": {
        "created_datetime": {
          "type": "string"
        },
        "sign_up_datetime": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "auth_id": {
          "type": "string"
        },
        "location": {
          "type": "integer",
          "format": "int32"
        },
        "photo_url": {
          "type": "string"
        },
        "email_prefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonEmailPref"
          },
          "title": "Pref"
        },
        "phone_prefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonPhonePref"
          }
        },
        "payment_provider": {
          "type": "integer",
          "format": "int32",
          "title": "Account"
        },
        "payment_customer_id": {
          "type": "string"
        },
        "payment_method_token": {
          "type": "string"
        },
        "active": {
          "type": "boolean",
          "format": "boolean"
        },
        "activate_datetime": {
          "type": "string"
        },
        "deactivated_datetime": {
          "type": "string"
        },
        "address": {
          "$ref": "#/definitions/CommonAddress"
        },
        "delivery_notes": {
          "type": "string"
        },
        "servings_non_vegetarian": {
          "type": "integer",
          "format": "int32",
          "title": "Plan"
        },
        "servings_vegetarian": {
          "type": "integer",
          "format": "int32"
        },
        "plan_interval": {
          "type": "integer",
          "format": "int32"
        },
        "plan_weekday": {
          "type": "string"
        },
        "interval_start_point": {
          "type": "string"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "food_pref": {
          "$ref": "#/definitions/CommonFoodPref"
        },
        "num_gift_dinners": {
          "type": "string",
          "format": "int64",
          "title": "Gift"
        },
        "gift_reveal_datetime": {
          "type": "string"
        },
        "referral_page_opens": {
          "type": "string",
          "format": "int64",
          "title": "Marketing"
        },
        "referred_page_opens": {
          "type": "string",
          "format": "int64"
        },
        "referrer_user_id": {
          "type": "string",
          "format": "int64"
        },
        "reference_email": {
          "type": "string"
        },
        "reference_text": {
          "type": "string"
        },
        "campaigns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommonCampaign"
          }
        }
      },
      "description": "Subscriber is a subscriber."
    }
  }
}
